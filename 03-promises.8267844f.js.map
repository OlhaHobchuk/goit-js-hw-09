{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3BC,YAAW,WACLN,GACJI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAClBA,E,IAMP,IAAMQ,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,KAAMJ,SAASC,cAAc,UAG/BH,EAAKM,KAAKC,iBAAiB,UAW3B,SAAsBC,GACpBA,EAAMC,iBAIR,WAME,IALA,IAAQC,EAAwBC,EAAxBnB,MAAOoB,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OAEfC,EAAmBC,OAAOF,GAC5BG,EAAaD,OAAOL,GAClBO,EAAuBF,OAAOH,GAC3BM,EAAI,EAAGA,GAAKJ,EAAmBI,GAAK,EAAGF,GAAcC,EAE5D3B,EAAc4B,EAAGF,GAAYG,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAC7C6B,EAAAjC,GAASkC,OAAOC,QAAQ,qBAAoCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAEjEiC,OAAM,SAAAL,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,EAAAjC,GAASkC,OAAOI,QAAQ,sBAAqCF,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAfzEmC,E,IAZF3B,EAAKM,KAAKC,iBAAiB,SAI3B,SAAqBC,GACpBG,EAASH,EAAMoB,OAAOC,MAAQrB,EAAMoB,OAAOE,MAC1CC,QAAQC,IAAIrB,E,IAJd,IAAMA,EAAW,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      if (shouldResolve) {\n      resolve({ position, delay })\n      }\n      reject({ position, delay })\n    }, delay)\n\n})\n\n}\n\nconst refs = {\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.form.addEventListener('input', onFormInput);\n\nconst formData = {};\n\nfunction onFormInput(event) {\n formData[event.target.name] = event.target.value;\n  console.log(formData);\n}\n\n\nfunction onFormSubmit(event) { \n  event.preventDefault();\n  createAmountOfPromises()\n}\n\nfunction createAmountOfPromises() {\n  const { delay, step, amount } = formData;\n\n  const amountOfPromises = Number(amount);\n  let firstDelay = Number(delay);\n  const secondAndNextDelayes = Number(step);\n  for (let i = 1; i <= amountOfPromises; (i += 1, firstDelay += secondAndNextDelayes)) {\n    \n    createPromise(i, firstDelay).then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.warning(`‚ùå Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","form","addEventListener","event","preventDefault","delay1","$ce04d3a99e08e73b$var$formData","step","amount","amountOfPromises","Number","firstDelay","secondAndNextDelayes","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","warning","$ce04d3a99e08e73b$var$createAmountOfPromises","target","name","value","console","log"],"version":3,"file":"03-promises.8267844f.js.map"}