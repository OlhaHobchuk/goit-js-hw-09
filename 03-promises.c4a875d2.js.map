{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACLN,GACJI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAMb,MAAMQ,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,KAAMJ,SAASC,cAAc,UAG/BH,EAAKM,KAAKC,iBAAiB,UAW3B,SAAsBC,GACpBA,EAAMC,iBAIR,WACE,MAAQjB,MAAAkB,EAAKC,KAAEA,EAAIC,OAAEA,GAAWC,EAE1BC,EAAmBC,OAAOH,GAChC,IAAII,EAAaD,OAAOL,GACxB,MAAMO,EAAuBF,OAAOJ,GACpC,IAAK,IAAIO,EAAI,EAAGA,GAAKJ,EAAmBI,GAAK,EAAGF,GAAcC,EAE5D3B,EAAc4B,EAAGF,GAAYG,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MAC7C4B,EAAAhC,GAASiC,OAAOC,QAAQ,qBAAqB/B,QAAeC,MAAU,IAErE+B,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClB4B,EAAAhC,GAASiC,OAAOG,QAAQ,sBAAoBjC,QAAeC,MAAU,G,CAf3EiC,E,IAZFzB,EAAKM,KAAKC,iBAAiB,SAI3B,SAAqBC,GACpBK,EAASL,EAAMkB,OAAOC,MAAQnB,EAAMkB,OAAOE,MAC1CC,QAAQC,IAAIjB,E,IAJd,MAAMA,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      if (shouldResolve) {\n      resolve({ position, delay })\n      }\n      reject({ position, delay })\n    }, delay)\n\n})\n\n}\n\nconst refs = {\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.form.addEventListener('input', onFormInput);\n\nconst formData = {};\n\nfunction onFormInput(event) {\n formData[event.target.name] = event.target.value;\n  console.log(formData);\n}\n\n\nfunction onFormSubmit(event) { \n  event.preventDefault();\n  createAmountOfPromises()\n}\n\nfunction createAmountOfPromises() {\n  const { delay, step, amount } = formData;\n\n  const amountOfPromises = Number(amount);\n  let firstDelay = Number(delay);\n  const secondAndNextDelayes = Number(step);\n  for (let i = 1; i <= amountOfPromises; (i += 1, firstDelay += secondAndNextDelayes)) {\n    \n    createPromise(i, firstDelay).then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.warning(`‚ùå Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","form","addEventListener","event","preventDefault","delay1","step","amount","$47d4ff9957288465$var$formData","amountOfPromises","Number","firstDelay","secondAndNextDelayes","i","then","$parcel$interopDefault","Notify","success","catch","warning","$47d4ff9957288465$var$createAmountOfPromises","target","name","value","console","log"],"version":3,"file":"03-promises.c4a875d2.js.map"}